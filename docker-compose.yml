

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: yargisalzeka-postgres
    environment:
      - POSTGRES_PASSWORD=DB_PASSWORD
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
    networks:
      - yargisalzeka-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  # OpenSearch (Optional - for advanced search)
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: yargisalzeka-opensearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - yargisalzeka-network

  # Frontend (Vite React served via Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_URL: http://ai-service:5012
    container_name: yargisalzeka-frontend
    ports:
      - "5173:80" # host:container
    depends_on:
      - ai-service
    networks:
      - yargisalzeka-network

  # Identity Service
  identity-service:
    build:
      context: .
      dockerfile: IdentityService/Dockerfile
    container_name: yargisalzeka-identity
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=IdentityDb;User Id=postgres;Password=DB_PASSWORD;
      - Jwt__Key=JWT_KEY
      - Jwt__Issuer=http://localhost:5001
      - Jwt__Audience=http://localhost:5001
    depends_on:
      - postgres
    networks:
      - yargisalzeka-network

  # Subscription Service
  subscription-service:
    build:
      context: .
      dockerfile: SubscriptionService/Dockerfile
    container_name: yargisalzeka-subscription
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=SubscriptionDb;User Id=postgres;Password=DB_PASSWORD;
    depends_on:
      - postgres
    networks:
      - yargisalzeka-network

  # Search Service
  search-service:
    build:
      context: .
      dockerfile: SearchService/Dockerfile
    container_name: yargisalzeka-search
    ports:
      - "5043:5043"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5043
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=yargitay_kararlari;Username=postgres;Password=DB_PASSWORD
      - Search__Provider=postgres
      - OpenSearch__Uri=http://opensearch:9200
      - OpenSearch__Index=decisions
      - Database__EnsureCreated=false
    depends_on:
      - postgres
      - opensearch
    networks:
      - yargisalzeka-network

  # AI Service
  ai-service:
    build:
      context: .
      dockerfile: AIService/Dockerfile
    container_name: yargisalzeka-ai
    ports:
      - "5012:5012"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5012
      - Jwt__Key=JWT_KEY
      - Jwt__Issuer=http://localhost:5001
      - Jwt__Audience=http://localhost:5001
      - Gemini__ApiKey=GEMINI_API_KEY
      - SearchService__BaseUrl=http://search-service:5043
    depends_on:
      - identity-service
      - search-service
      - subscription-service
    networks:
      - yargisalzeka-network

volumes:
  postgres_data:
    name: yargisalzeka-dotnet-microservices_postgres_data
    external: true
  opensearch_data:
    name: yargisalzeka-dotnet-microservices_opensearch_data
    external: true

networks:
  yargisalzeka-network:
    driver: bridge

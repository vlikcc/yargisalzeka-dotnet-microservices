// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: subscriptions.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace subscriptions {
  public static partial class Subscription
  {
    static readonly string __ServiceName = "subscriptions.Subscription";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.CheckStatusRequest> __Marshaller_subscriptions_CheckStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.CheckStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.CheckStatusResponse> __Marshaller_subscriptions_CheckStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.CheckStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.ConsumeFeatureRequest> __Marshaller_subscriptions_ConsumeFeatureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.ConsumeFeatureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.ConsumeFeatureResponse> __Marshaller_subscriptions_ConsumeFeatureResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.ConsumeFeatureResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.GetRemainingCreditsRequest> __Marshaller_subscriptions_GetRemainingCreditsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.GetRemainingCreditsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.GetRemainingCreditsResponse> __Marshaller_subscriptions_GetRemainingCreditsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.GetRemainingCreditsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.ValidateFeatureAccessRequest> __Marshaller_subscriptions_ValidateFeatureAccessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.ValidateFeatureAccessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.ValidateFeatureAccessResponse> __Marshaller_subscriptions_ValidateFeatureAccessResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.ValidateFeatureAccessResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.AssignTrialRequest> __Marshaller_subscriptions_AssignTrialRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.AssignTrialRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::subscriptions.AssignTrialResponse> __Marshaller_subscriptions_AssignTrialResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::subscriptions.AssignTrialResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::subscriptions.CheckStatusRequest, global::subscriptions.CheckStatusResponse> __Method_CheckSubscriptionStatus = new grpc::Method<global::subscriptions.CheckStatusRequest, global::subscriptions.CheckStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckSubscriptionStatus",
        __Marshaller_subscriptions_CheckStatusRequest,
        __Marshaller_subscriptions_CheckStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::subscriptions.ConsumeFeatureRequest, global::subscriptions.ConsumeFeatureResponse> __Method_ConsumeFeature = new grpc::Method<global::subscriptions.ConsumeFeatureRequest, global::subscriptions.ConsumeFeatureResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConsumeFeature",
        __Marshaller_subscriptions_ConsumeFeatureRequest,
        __Marshaller_subscriptions_ConsumeFeatureResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::subscriptions.GetRemainingCreditsRequest, global::subscriptions.GetRemainingCreditsResponse> __Method_GetRemainingCredits = new grpc::Method<global::subscriptions.GetRemainingCreditsRequest, global::subscriptions.GetRemainingCreditsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRemainingCredits",
        __Marshaller_subscriptions_GetRemainingCreditsRequest,
        __Marshaller_subscriptions_GetRemainingCreditsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::subscriptions.ValidateFeatureAccessRequest, global::subscriptions.ValidateFeatureAccessResponse> __Method_ValidateFeatureAccess = new grpc::Method<global::subscriptions.ValidateFeatureAccessRequest, global::subscriptions.ValidateFeatureAccessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateFeatureAccess",
        __Marshaller_subscriptions_ValidateFeatureAccessRequest,
        __Marshaller_subscriptions_ValidateFeatureAccessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::subscriptions.AssignTrialRequest, global::subscriptions.AssignTrialResponse> __Method_AssignTrialSubscription = new grpc::Method<global::subscriptions.AssignTrialRequest, global::subscriptions.AssignTrialResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AssignTrialSubscription",
        __Marshaller_subscriptions_AssignTrialRequest,
        __Marshaller_subscriptions_AssignTrialResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::subscriptions.SubscriptionsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Subscription</summary>
    public partial class SubscriptionClient : grpc::ClientBase<SubscriptionClient>
    {
      /// <summary>Creates a new client for Subscription</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SubscriptionClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Subscription that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SubscriptionClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SubscriptionClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SubscriptionClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.CheckStatusResponse CheckSubscriptionStatus(global::subscriptions.CheckStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckSubscriptionStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.CheckStatusResponse CheckSubscriptionStatus(global::subscriptions.CheckStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckSubscriptionStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.CheckStatusResponse> CheckSubscriptionStatusAsync(global::subscriptions.CheckStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckSubscriptionStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.CheckStatusResponse> CheckSubscriptionStatusAsync(global::subscriptions.CheckStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckSubscriptionStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.ConsumeFeatureResponse ConsumeFeature(global::subscriptions.ConsumeFeatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConsumeFeature(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.ConsumeFeatureResponse ConsumeFeature(global::subscriptions.ConsumeFeatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConsumeFeature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.ConsumeFeatureResponse> ConsumeFeatureAsync(global::subscriptions.ConsumeFeatureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConsumeFeatureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.ConsumeFeatureResponse> ConsumeFeatureAsync(global::subscriptions.ConsumeFeatureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConsumeFeature, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.GetRemainingCreditsResponse GetRemainingCredits(global::subscriptions.GetRemainingCreditsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRemainingCredits(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.GetRemainingCreditsResponse GetRemainingCredits(global::subscriptions.GetRemainingCreditsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRemainingCredits, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.GetRemainingCreditsResponse> GetRemainingCreditsAsync(global::subscriptions.GetRemainingCreditsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRemainingCreditsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.GetRemainingCreditsResponse> GetRemainingCreditsAsync(global::subscriptions.GetRemainingCreditsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRemainingCredits, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.ValidateFeatureAccessResponse ValidateFeatureAccess(global::subscriptions.ValidateFeatureAccessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateFeatureAccess(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.ValidateFeatureAccessResponse ValidateFeatureAccess(global::subscriptions.ValidateFeatureAccessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateFeatureAccess, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.ValidateFeatureAccessResponse> ValidateFeatureAccessAsync(global::subscriptions.ValidateFeatureAccessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateFeatureAccessAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.ValidateFeatureAccessResponse> ValidateFeatureAccessAsync(global::subscriptions.ValidateFeatureAccessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateFeatureAccess, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.AssignTrialResponse AssignTrialSubscription(global::subscriptions.AssignTrialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AssignTrialSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::subscriptions.AssignTrialResponse AssignTrialSubscription(global::subscriptions.AssignTrialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AssignTrialSubscription, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.AssignTrialResponse> AssignTrialSubscriptionAsync(global::subscriptions.AssignTrialRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AssignTrialSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::subscriptions.AssignTrialResponse> AssignTrialSubscriptionAsync(global::subscriptions.AssignTrialRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AssignTrialSubscription, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SubscriptionClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SubscriptionClient(configuration);
      }
    }

  }
}
#endregion
